buildscript {
    repositories {
    	mavenCentral()
        maven { url 'http://repo.springsource.org/plugins-release' }
    }
	dependencies {
		classpath project(':jpsg:gradle-plugin')
        classpath project('impl-generator')
		classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.5'
	}
}

configure([project('api'), project('impl')]) {
    applyJpsg()
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-idea'
    apply plugin: 'findbugs'

	setSourceCompatibility(1.6)

    dependencies {
        provided 'com.google.auto.value:auto-value:1.0-rc1'
    }

    compileJava {
        // To suppress warnings about usages of sun.misc.Unsafe API
        options.compilerArgs << '-XDignore.symbol.file'
        options.compilerArgs += ['-Xlint:all', '-Xlint:-unchecked', '-Xlint:-rawtypes',
                                 '-Xlint:-cast', '-Xlint:-deprecation']
        options.fork = true
        def javac = System.env['JAVA_HOME'] ? System.env['JAVA_HOME'] + '/bin/javac' : 'javac'
        options.forkOptions.executable = javac
        
    }

    findbugs {
        toolVersion = '2.0.3'
        // check (hence build) task don't depend on FindBugs, because
        // benchmarks subproject requires Java 8 compiler, while FindBugs
        // crashes on Java 8 - compiled bytecode even with -source 1.6 flag. To find bugs, run
        // $ JAVA_HOME=<java-7-home> gradle impl:findBugsMain
        // TODO fix when Java 8 - compatible version of FindBugs is out
        sourceSets = []
        effort = 'max'
        reportLevel = 'high'
        excludeFilter = file("$buildDir/config/findbugs/excludeFilter.xml")
    }

    idea.module {
        excludeDirs.remove(file("$buildDir/classes"))
        // AutoValue implementations are located there
        sourceDirs += sourceSets*.output.classesDir
    }
}